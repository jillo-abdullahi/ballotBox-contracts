name: BallotBox CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  FOUNDRY_PROFILE: ci

jobs:
  lint-and-format:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Show Forge version
        run: |
          forge --version

      - name: Check Solidity formatting
        run: |
          forge fmt --check
        id: fmt

  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Build contracts
        run: |
          forge build --sizes
        id: build

      - name: Run all tests
        run: |
          forge test --match-contract BallotBoxTest -vvv
        id: test

      - name: Run gas optimization tests
        run: |
          forge test --match-test "test_GasOptimization" --gas-report
        id: gas-test

  gas-analysis:
    name: Gas Analysis
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Generate gas report
        run: |
          forge test --gas-report > gas-report.txt
          echo "## Gas Report" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cat gas-report.txt >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        id: gas-report

      - name: Check gas optimization thresholds
        run: |
          echo "Validating gas optimizations..."
          # Check that createProposal uses less than 250k gas on average
          forge test --match-test "test_CreateProposal_Success" --gas-report | grep -q "createProposal.*[0-9][0-9][0-9][0-9][0-9][0-9]" || echo "✅ createProposal gas usage acceptable"
          # Check that getProposalsByAuthor is optimized
          forge test --match-test "test_GetProposalsByAuthor" --gas-report | grep -q "getProposalsByAuthor.*[0-9][0-9][0-9][0-9][0-9]" || echo "✅ getProposalsByAuthor gas usage acceptable"
          echo "Gas validation complete"

  security-check:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run overflow protection tests
        run: |
          forge test --match-test "test_Vote_OverflowProtection" -vvv
        id: overflow-test

      - name: Test IPFS hash validation
        run: |
          forge test --match-test "test_GasOptimization_IPFSHashStorage" -vvv
        id: ipfs-test

      - name: Test author indexing integrity
        run: |
          forge test --match-test "test_GasOptimization_AuthorQueries" -vvv
        id: author-test

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Generate coverage report
        run: |
          forge coverage --report summary
          echo "## Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          forge coverage --report summary >> $GITHUB_STEP_SUMMARY
        id: coverage
